<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/7/2021 1:38:19 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="XENODEMOUS27"
  DTS:CreatorName="XENODEMOUS27\Xeno"
  DTS:DTSID="{3303FC5E-F993-478C-A85C-9E17611497FB}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.167"
  DTS:LocaleID="1033"
  DTS:ObjectName="ImportRMSIndication"
  DTS:PackageType="5"
  DTS:VersionBuild="87"
  DTS:VersionGUID="{08B130D9-C1DB-44B0-9F0E-64CF3E1A5CF6}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Exception Log]"
      DTS:CreationName="FILE"
      DTS:DTSID="{AB0E8DC9-BE1D-4213-AD66-6ACCC013D8D3}"
      DTS:ObjectName="Exception Log">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Project::ExceptionFolder] + @[User::ExceptionFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="C:\Client\RA\DataFeeds\RMS\Exceptions\ImportRMSIndicationErrors.txt" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Input File Indications]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{2D65BD3E-B412-41F9-A97D-EE7583063ED4}"
      DTS:ObjectName="Input File Indications">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::InputFolder] + @[User::InputFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="65001"
          DTS:ConnectionString="C:\Client\RA\DataFeeds\RMS\Import\2022-06-22\rms_prod_edm_indication_2022-06-22.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="indication_name"
              DTS:DTSID="{004E8B33-3D73-4C0F-9BB7-8FD2053365A2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="indication_id"
              DTS:DTSID="{BAE76F19-E273-4037-8732-BD834DB10FAF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="indication_product_ids"
              DTS:DTSID="{78272C86-6F65-4D4B-92C1-0207350768B9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="indication_child_relationship_ids"
              DTS:DTSID="{E7BF0495-192E-41DA-94FD-0FB737B2327A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="indication_synonym_ids"
              DTS:DTSID="{383C7596-2115-49AE-B16E-6B8D2C3017D8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="indication_classification_id"
              DTS:DTSID="{500EA03C-D629-41D3-A34D-29C3F6663C84}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="indication_classification"
              DTS:DTSID="{95B4356A-0B51-4BA4-BE21-3FCA5B101794}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="Exception Log"
      DTS:CreationName="Microsoft.LogProviderTextFile"
      DTS:Description="Writes log entries for events to a CSV file"
      DTS:DTSID="{C6A87254-D7F5-4C03-B60B-E507F6E877F5}"
      DTS:ObjectName="SSIS log provider for Text files">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B0D2AF65-964E-4AC7-98A9-D5027147C651}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_STR, 4, 1252) DATEPART(&quot;yyyy&quot; , @[User::CurrentDate] )&#xA;+&quot;-&quot;+RIGHT(&quot;0&quot; + (DT_STR, 2, 1252) DATEPART(&quot;mm&quot; , @[User::CurrentDate] ), 2)&#xA;+&quot;-&quot;+RIGHT(&quot;0&quot; + (DT_STR, 2, 1252) DATEPART(&quot;dd&quot; , @[User::CurrentDate] ), 2)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="BusinessDate">
      <DTS:VariableValue
        DTS:DataType="8">2022-06-22</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ABE9BA77-2428-4291-A40C-2A24C04BDB52}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="DATEADD(&quot;d&quot;, 0, GETDATE() )"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentDate">
      <DTS:VariableValue
        DTS:DataType="7">6/22/2022 4:05:15 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{58CB9072-F1C5-461F-9C37-4BDD8DB5FE3E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExceptionFileName">
      <DTS:VariableValue
        DTS:DataType="8">ImportRMSIndicationErrors.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E0DE28A5-3844-492D-83E4-A0CC3C6C3A97}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;rms_prod_edm_indication_&quot; + @[User::BusinessDate] +&quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InputFileName">
      <DTS:VariableValue
        DTS:DataType="8">rms_prod_edm_indication_2022-06-22.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{494E6B91-9BF5-41A5-AF8E-EB32B03E97BC}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::InputFolder]  + @[User::BusinessDate] + &quot;\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InputFolder">
      <DTS:VariableValue
        DTS:DataType="8">C:\Client\RA\DataFeeds\RMS\Import\2022-06-22\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="2">
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{C6A87254-D7F5-4C03-B60B-E507F6E877F5}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create Indications"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{DB00B76B-B1F6-45FF-9358-3F690E9EBD23}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create Indications">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,7,OnError,31,TimeScape Create Item Transform</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="TimeScape Create Item Transform"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="TimeScape Find Category Transform"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{C6A87254-D7F5-4C03-B60B-E507F6E877F5}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Create Indications\DC - Edit Columns"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="DC - Edit Columns"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Create Indications\DC - Edit Columns.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Indications\DC - Edit Columns.Inputs[Derived Column Input].Columns[indication_name]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_name"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="IgnoreFailure"
                      lineageId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].Columns[indication_name]"
                      truncationRowDisposition="IgnoreFailure"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[UPPER](#{Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].Columns[indication_name]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">UPPER(indication_name)</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create Indications\DC - Edit Columns.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Create Indications\DC - Edit Columns.Inputs[Derived Column Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create Indications\DC - Edit Columns.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Create Indications\DC - Edit Columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Indications\DC - Edit Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create Indications\DC - Edit Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create Indications\DC - Edit Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create Indications\DC - Edit Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create Indications\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Create Indications\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create Indications\Multicast.Outputs[Multicast Output 4]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 4"
                  synchronousInputId="Package\Create Indications\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create Indications\Multicast.Outputs[Multicast Output 3]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Create Indications\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create Indications\Read Indications File"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Read Indications File"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create Indications\Read Indications File.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Input File Indications]"
                  connectionManagerRefId="Package.ConnectionManagers[Input File Indications]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].Columns[indication_id]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_id]"
                      length="50"
                      lineageId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].Columns[indication_id]"
                      name="indication_id"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].Columns[indication_name]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_name]"
                      length="50"
                      lineageId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].Columns[indication_name]"
                      name="indication_name"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].Columns[indication_synonym_ids]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_synonym_ids]"
                      length="50"
                      lineageId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].Columns[indication_synonym_ids]"
                      name="indication_synonym_ids"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].Columns[indication_child_relationship_ids]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_child_relationship_ids]"
                      length="50"
                      lineageId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].Columns[indication_child_relationship_ids]"
                      name="indication_child_relationship_ids"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].Columns[indication_classification_id]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_classification_id]"
                      length="50"
                      lineageId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].Columns[indication_classification_id]"
                      name="indication_classification_id"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].Columns[indication_classification]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_classification]"
                      length="50"
                      lineageId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].Columns[indication_classification]"
                      name="indication_classification"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].Columns[indication_product_ids]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_product_ids]"
                      length="50"
                      lineageId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].Columns[indication_product_ids]"
                      name="indication_product_ids"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_id]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="indication_id" />
                    <externalMetadataColumn
                      refId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_name]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="indication_name" />
                    <externalMetadataColumn
                      refId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_synonym_ids]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="indication_synonym_ids" />
                    <externalMetadataColumn
                      refId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_child_relationship_ids]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="indication_child_relationship_ids" />
                    <externalMetadataColumn
                      refId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_classification_id]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="indication_classification_id" />
                    <externalMetadataColumn
                      refId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_classification]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="indication_classification" />
                    <externalMetadataColumn
                      refId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_product_ids]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="indication_product_ids" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create Indications\TimeScape Create Indication Raw"
              componentClassID="Microsoft.ManagedComponentHost"
              description="TimeScape Create Item Transform"
              name="TimeScape Create Indication Raw"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Code Type to use for all items. This is used when CodeTypeColumn = -1 as the code type is not provided in the column data."
                  expressionType="Notify"
                  name="CodeType">RMS_INDICATION_ID</property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the item code type to use."
                  expressionType="Notify"
                  name="CodeTypeColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">-1</property>
                <property
                  dataType="System.String"
                  description="Category to use for all items. This is used when CategoryColumn = -1 as the Category is not provided in the column data."
                  expressionType="Notify"
                  name="Category">Indication</property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the item code to use."
                  expressionType="Notify"
                  name="CodeColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">0</property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the target Category."
                  expressionType="Notify"
                  name="CategoryColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">-1</property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the target Database. If this value is -1 a TimeScape Database connection manager is required."
                  expressionType="Notify"
                  name="DatabaseColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">-1</property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the item description to use."
                  expressionType="Notify"
                  name="DescriptionColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">1</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Xenomorph.TimeScape.SSIS.CreateItemTransform, Xenomorph.TimeScape.SSIS, Version=5.0.4000.0, Culture=neutral, PublicKeyToken=2adfa95c2785233e</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create Indications\TimeScape Create Indication Raw.Connections[TimeScapeDatabaseConnector]"
                  connectionManagerID="{F1478C8A-4B9E-42EF-B758-9D8D8F6B6E35}:external"
                  connectionManagerRefId="Project.ConnectionManagers[Global Raw Database]"
                  name="TimeScapeDatabaseConnector" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create Indications\TimeScape Create Indication Raw.Inputs[Create Item Input]"
                  errorOrTruncationOperation="Could not Create Item in Database"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="Create Item Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Indications\TimeScape Create Indication Raw.Inputs[Create Item Input].Columns[indication_id]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_id"
                      lineageId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].Columns[indication_id]" />
                    <inputColumn
                      refId="Package\Create Indications\TimeScape Create Indication Raw.Inputs[Create Item Input].Columns[indication_name]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_name"
                      lineageId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output].Columns[indication_name]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create Indications\TimeScape Create Indication Raw.Outputs[Create Item Output]"
                  name="Create Item Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Indications\TimeScape Create Indication Raw.Outputs[Create Item Output].Columns[indication_id]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      lineageId="Package\Create Indications\TimeScape Create Indication Raw.Outputs[Create Item Output].Columns[indication_id]"
                      name="indication_id">
                      <properties>
                        <property
                          dataType="System.Int32"
                          name="InputColumnLineageID">20</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create Indications\TimeScape Create Indication Raw.Outputs[Create Item Output].Columns[indication_name]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      lineageId="Package\Create Indications\TimeScape Create Indication Raw.Outputs[Create Item Output].Columns[indication_name]"
                      name="indication_name">
                      <properties>
                        <property
                          dataType="System.Int32"
                          name="InputColumnLineageID">23</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create Indications\TimeScape Create Indication Raw.Outputs[Create Item Error Output]"
                  isErrorOut="true"
                  name="Create Item Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Indications\TimeScape Create Indication Raw.Outputs[Create Item Error Output].Columns[indication_id]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      lineageId="Package\Create Indications\TimeScape Create Indication Raw.Outputs[Create Item Error Output].Columns[indication_id]"
                      name="indication_id">
                      <properties>
                        <property
                          dataType="System.Int32"
                          name="InputColumnLineageID">20</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create Indications\TimeScape Create Indication Raw.Outputs[Create Item Error Output].Columns[indication_name]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      lineageId="Package\Create Indications\TimeScape Create Indication Raw.Outputs[Create Item Error Output].Columns[indication_name]"
                      name="indication_name">
                      <properties>
                        <property
                          dataType="System.Int32"
                          name="InputColumnLineageID">23</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Create Indications\TimeScape Create Indication Raw.Outputs[Create Item Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create Indications\TimeScape Create Indication Raw.Outputs[Create Item Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create Indications\TimeScape Create Indication Raw.Outputs[Create Item Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create Indications\TimeScape Create Indication Raw.Outputs[Create Item Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Create Indications.Paths[Derived Column Output]"
              endId="Package\Create Indications\Multicast.Inputs[Multicast Input 1]"
              name="Derived Column Output"
              startId="Package\Create Indications\DC - Edit Columns.Outputs[Derived Column Output]" />
            <path
              refId="Package\Create Indications.Paths[Flat File Source Output]"
              endId="Package\Create Indications\DC - Edit Columns.Inputs[Derived Column Input]"
              name="Flat File Source Output"
              startId="Package\Create Indications\Read Indications File.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Create Indications.Paths[Multicast Output 4]"
              endId="Package\Create Indications\TimeScape Create Indication Raw.Inputs[Create Item Input]"
              name="Multicast Output 4"
              startId="Package\Create Indications\Multicast.Outputs[Multicast Output 4]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Save Indication Data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{2D36F0FC-5CBC-4A9C-9C9A-162062F9F7D2}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Save Indication Data">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">6,31,TimeScape Create Item Transform,33,TimeScape Find Category Transform,7,OnError,31,TimeScape Create List Transform,27,TimeScape Value Destination,28,TimeScape Values Destination</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="TimeScape Create Item Transform"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="TimeScape Create List Transform"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="TimeScape Find Category Transform"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="TimeScape Value Destination"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="TimeScape Values Destination"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{C6A87254-D7F5-4C03-B60B-E507F6E877F5}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Save Indication Data\DC - Edit Columns"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="DC - Edit Columns"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Save Indication Data\DC - Edit Columns.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Save Indication Data\DC - Edit Columns.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Save Indication Data\DC - Edit Columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save Indication Data\DC - Edit Columns.Outputs[Derived Column Output].Columns[BusinessDate]"
                      dataType="date"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="IgnoreFailure"
                      lineageId="Package\Save Indication Data\DC - Edit Columns.Outputs[Derived Column Output].Columns[BusinessDate]"
                      name="BusinessDate"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_DATE)(@[User::BusinessDate])</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_DATE)(@[User::BusinessDate])</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Save Indication Data\DC - Edit Columns.Outputs[Derived Column Output].Columns[Updated]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="IgnoreFailure"
                      lineageId="Package\Save Indication Data\DC - Edit Columns.Outputs[Derived Column Output].Columns[Updated]"
                      name="Updated"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Save Indication Data\DC - Edit Columns.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Save Indication Data\DC - Edit Columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save Indication Data\DC - Edit Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Save Indication Data\DC - Edit Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Save Indication Data\DC - Edit Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Save Indication Data\DC - Edit Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Save Indication Data\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Save Indication Data\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Save Indication Data\Multicast.Outputs[Multicast Output 3]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Save Indication Data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Save Indication Data\Multicast.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Save Indication Data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Save Indication Data\Multicast.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Save Indication Data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Save Indication Data\Multicast.Outputs[Multicast Output 4]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 4"
                  synchronousInputId="Package\Save Indication Data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Save Indication Data\Read Indications File"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Read Indications File"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Save Indication Data\Read Indications File.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Input File Indications]"
                  connectionManagerRefId="Package.ConnectionManagers[Input File Indications]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_id]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_id]"
                      length="50"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_id]"
                      name="indication_id"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_name]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_name]"
                      length="50"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_name]"
                      name="indication_name"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_synonym_ids]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_synonym_ids]"
                      length="50"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_synonym_ids]"
                      name="indication_synonym_ids"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_product_ids]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_product_ids]"
                      length="50"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_product_ids]"
                      name="indication_product_ids"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_child_relationship_ids]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_child_relationship_ids]"
                      length="50"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_child_relationship_ids]"
                      name="indication_child_relationship_ids"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_classification_id]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_classification_id]"
                      length="50"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_classification_id]"
                      name="indication_classification_id"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_classification]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      externalMetadataColumnId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_classification]"
                      length="50"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_classification]"
                      name="indication_classification"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_id]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="indication_id" />
                    <externalMetadataColumn
                      refId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_name]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="indication_name" />
                    <externalMetadataColumn
                      refId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_synonym_ids]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="indication_synonym_ids" />
                    <externalMetadataColumn
                      refId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_product_ids]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="indication_product_ids" />
                    <externalMetadataColumn
                      refId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_child_relationship_ids]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="indication_child_relationship_ids" />
                    <externalMetadataColumn
                      refId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_classification_id]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="indication_classification_id" />
                    <externalMetadataColumn
                      refId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].ExternalColumns[indication_classification]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="indication_classification" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Save Indication Data\SC - Product IDs"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SC - Product IDs"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_22871457d4fd4656b94c18ec7b8e8c67.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{00C4F087-F73E-4E97-AAAD-AEE9AF786A28}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_22871457d4fd4656b94c18ec7b8e8c67</RootNamespace>
    <AssemblyName>SC_22871457d4fd4656b94c18ec7b8e8c67</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string sProductList = Row.indicationproductids;
        try
        {
            if (sProductList != "")
            {           
                string[] sTokens = sProductList.Split('|');
                for (int i = 0; i < sTokens.Length; i++)
                {
                    Output0Buffer.AddRow();
                    Output0Buffer.indicationid = Row.indicationid;
                    Output0Buffer.indicationproductid = sTokens[i];
                }
            }
        }
        catch(Exception ex)
        {
            // Oopps
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String indicationid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool indicationid_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String indicationproductids
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool indicationproductids_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String indicationid
    {
        set
        {
            this[0] = value;
        }
    }
    public bool indicationid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String indicationproductid
    {
        set
        {
            this[1] = value;
        }
    }
    public bool indicationproductid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_22871457d4fd4656b94c18ec7b8e8c67.Properties.Settings.get_Default():SC_22871457d4fd4656b94c18ec7b8e8c67.Properties.Sett" +
    "ings")]

namespace SC_22871457d4fd4656b94c18ec7b8e8c67.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_22871457d4fd4656b94c18ec7b8e8c67</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_22871457d4fd4656b94c18ec7b8e8c67</msb:DisplayName>
    <msb:ProjectId>{15D44F16-92DD-45B8-B6A0-F76614AF26D4}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_22871457d4fd4656b94c18ec7b8e8c67.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_22871457d4fd4656b94c18ec7b8e8c67")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_22871457d4fd4656b94c18ec7b8e8c67")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_22871457d4fd4656b94c18ec7b8e8c67.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_22871457d4fd4656b94c18ec7b8e8c67.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_22871457d4fd4656b94c18ec7b8e8c67.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_22871457d4fd4656b94c18ec7b8e8c67.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_22871457d4fd4656b94c18ec7b8e8c67.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_22871457d4fd4656b94c18ec7b8e8c67.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAB7UcmEAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAyjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHg1AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA0BUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACs
NQAAAAAAAEgAAAACAAUACCMAALgRAAABAAAAAAAAAMA0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAUAZAAAAAEAABEDbwgAAAYK
BnIBAABwKBIAAAosSgYXjRwAAAElFh98nW8TAAAKCxYMKy4CewMAAARvEQAABgJ7AwAABANvBgAA
Bm8NAAAGAnsDAAAEBwiabw8AAAYIF1gMCAeOaTLM3gMm3gAqARAAAAAABwBZYAADDgAAAR4CKBQA
AAYqKgIDBAUoFAAACipSAnsVAAAKAnsWAAAKFpRvFwAACioiAhYoGAAACipSAnsVAAAKAnsWAAAK
F5RvFwAACioiAhcoGAAACioeAigZAAAKKh4CKBoAAAoqJgIWAygbAAAKKloDLAgCFigcAAAKKnID
AABwcx0AAAp6JgIXAygbAAAKKloDLAgCFygcAAAKKnIDAABwcx0AAAp6HgIoHgAACioeAigfAAAK
Kn4CKCAAAAoCAnMcAAAGfQEAAAQCAnMdAAAGfQIAAAQqAAAAEzAEAE8AAAAAAAAABHKgAABwGm8h
AAAKLBUCBQIDKCIAAAoOBHMFAAAGbxoAAAYFbyMAAAosIwICewQAAAQXWH0EAAAEAnsEAAAEFzMM
Am8WAAAGAigXAAAGKgYqbgJ7AwAABCwSAnsDAAAEbxIAAAYCFH0DAAAEKgAAABMwBQA9AAAAAgAA
ERYKKy4EBpQOBHKwAABwKCQAAAozGQIFBpoCBAaUKCIAAAoOBHMMAAAGfQMAAAQGF1gKBgMyzgJv
GQAABipKKwcCA28bAAAGA28KAAAGLfEqOgIoJQAACgIDfQUAAAQqOgIoJQAACgIDfQYAAAQqHgIo
JQAACiqufgcAAAQtHnLCAABw0AgAAAIoJgAACm8nAAAKcygAAAqABwAABH4HAAAEKhp+CAAABCoe
AoAIAAAEKhp+CQAABCoeAigpAAAKKi5zIwAABoAJAAAEKkJTSkIBAAEAAAAAAAwAAAB2NC4wLjMw
MzE5AAAAAAUAbAAAAMgGAAAjfgAANAcAAGgHAAAjU3RyaW5ncwAAAACcDgAANAEAACNVUwDQDwAA
EAAAACNHVUlEAAAA4A8AANgBAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAAh
AAAACQAAAAkAAAAkAAAAGAAAACkAAAAQAAAAAgAAAAQAAAALAAAADAAAAAEAAAAEAAAAAQAAAAAA
VgMBAAAAAAAGAE0COgUGAOECOgUGAJkBDgUPAK4FAAAGAMYBRgQGADACRgQGABECRgQGAMgCRgQG
AG0CRgQGAIYCRgQGAN0BRgQGAPgBHAMKAKEC5gAGAGgE/gMKANYE5gAOAMcE5gAKAI8E5gAKALcG
5gAGAGEG/gMGAHwBDgUGAOcEWgUGAIMEMQQSAEwBQAMSAK0BQAMSADQBHAQGAGEBOgUGADkD/gMG
AKcE/gMGAFgE/gMGAHIE/gMGAAcB/gMGALgA/gMGAE8HRgQAAAAAJQAAAAAAAQABAAEAEAARBAAA
FAABAAEAAQAQAKwEAAA9AAEABQABABAAuQQAAD0AAQAMAAEAEACZBgAASQABABQAAQAQACsGAABN
AAUAHAABABAA7AUAAE0ABgAdAAAAEABhBb0FTQAHAB4AAAEQABsGvQVlAAkAIgAGACsGlQAGAOwF
mQAGALkEnQABAEsAoQABAKcGpAABAKcGpAARAAUEqAARACQBrAARAKgAsABQIAAAAADGAP8CBgAB
AFggAAAAAMYACgMGAAEAYCAAAAAAxgAsB7QAAQDgIAAAAACGGPcEBgACAOggAAAAAIYY9wQvAAIA
8yAAAAAAhghuALoABQAIIQAAAACGCH4DSwAFABEhAAAAAIYIIQW6AAUAJiEAAAAAhgjNA0sABQAv
IQAAAACGAEMHSwAFADchAAAAAIYAewZLAAUA6CAAAAAAhhj3BC8ABQA/IQAAAACGCH8AEAAIAEkh
AAAAAIYIlgO+AAkAYCEAAAAAhgiQABAACgBqIQAAAACGCK4DvgALAIEhAAAAAIYAJQcGAAwAiSEA
AAAAhgB4BgYADAA3IQAAAACGAHsGSwAMAJEhAAAAAIYY9wQGAAwAtCEAAAAAxgAMB8MADAAPIgAA
AADGAT8GBgAQABEiAAAAAIEAWgAGABAAMCIAAAAAxgAZB80AEAAPIgAAAADGAU0GBgAUAHkiAAAA
AMYBBQe0ABQADyIAAAAAxgEsB7QAFQCMIgAAAACGGPcE2QAWAJsiAAAAAIYY9wTZABcAqiIAAAAA
gxj3BAYAGACyIgAAAACTCOME3wAYAN4iAAAAAJMIDAHkABgA5SIAAAAAkwgYAekAGADtIgAAAACW
CI0G7wAZAPQiAAAAAIYY9wQGABkA/CIAAAAAkRj9BPQAGQAAAAEARwcAAAEA3AQAAAIA9gUAAAMA
nQQAAAEA3AQAAAIA9gUAAAMAnQQAAAEAFgMAAAEAFgMAAAEAFgMAAAEAFgMAAAEALgAAAAIA3AAA
AAMA3AQAAAQAnQQAAAEARQYAAAIABAUAAAMANwYAAAQAnQQAAAEA3AQAAAEARwcAAAEAvQYAAAEA
vQYAAAEAFgMJAPcEAQARAPcEBgAZAPcECgApAPcEEAAxAPcEEAA5APcEEABBAPcEEABJAPcEEABR
APcEEABZAPcEEABhAPcEEABpAPcEBgChAPcEBgDBAPcEFQDRAPcEBgCRAP8CBgCRAAoDBgDZAFgH
IgDZAIcGKAB5APcELwB5ANwEOQB5APYFPQCBADYDQQB5AOYDRgB5AEMHSwB5AHsGSwB5APUDTwB5
AO0DAQDpAPcEEAB5ACUHBgB5AHgGBgCRAPcEBgDZACQGVQCRAAoGXACBAGgGSwCRADYAZgCZAPcE
BgD5AMoAbQD5AEsHdQCpAPcEewDJAPcEBgAuAAsADwEuABMAGAEuABsANwEuACMAQAEuACsAaQEu
ADMAaQEuADsAaQEuAEMAQAEuAEsAbwEuAFMAaQEuAFsAhgFDAGMA0AEDAWsA0AEhAXsA0AEpAXMA
NwFJAXMANwEbAGIAAwABAAQABQAIAAkACQALAAAAgwD4AAAAmgP8AAAAJQX4AAAA0QP8AAAAgwD4
AAAAmgP8AAAAlAD4AAAAsgP8AAAA5wQAAQAALAEFAQAAkQYKAQIABgADAAIABwAFAAIACAAHAAIA
CQAJAAEADQALAAEADgANAAEADwAPAAEAEAARAAIAHwATAAIAIAAVAAEAIQAVAAIAIgAXAASAAAAB
AAAAAAAAAAAAAAAAAAEAAAAEAAAAAAAAAAAAAACDAEIAAAAAAA8AAAAAAAAAAAAAAIwAxwYAAAAA
DwAAAAAAAAAAAAAAjADkBgAAAAAEAAAAAAAAAAAAAACDAP4DAAAAAAAAAAABAAAAawUAAAAAAFND
XzIyODcxNDU3ZDRmZDQ2NTZiOTRjMThlYzdiOGU4YzY3ADxNb2R1bGU+AElucHV0SUQAR2V0T3V0
cHV0SUQAbXNjb3JsaWIASW5wdXRzRmluaXNoZWQATWFya091dHB1dHNGaW5pc2hlZABnZXRfaW5k
aWNhdGlvbmlkAHNldF9pbmRpY2F0aW9uaWQAc2V0X2luZGljYXRpb25wcm9kdWN0aWQAZGVmYXVs
dEluc3RhbmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0
cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2Vt
Ymx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2Ny
aXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21w
b25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5nAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ18y
Mjg3MTQ1N2Q0ZmQ0NjU2Yjk0YzE4ZWM3YjhlOGM2Ny5kbGwAZ2V0X2luZGljYXRpb25pZF9Jc051
bGwAc2V0X2luZGljYXRpb25pZF9Jc051bGwAc2V0X2luZGljYXRpb25wcm9kdWN0aWRfSXNOdWxs
AGdldF9pbmRpY2F0aW9ucHJvZHVjdGlkc19Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0A
cmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFs
aXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmlu
Z0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAAQ2hhcgBJbnB1
dDBCdWZmZXIAT3V0cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jl
c291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBn
ZXRfaW5kaWNhdGlvbnByb2R1Y3RpZHMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBT
eXN0ZW0uUmVzb3VyY2VzAFNDXzIyODcxNDU3ZDRmZDQ2NTZiOTRjMThlYzdiOGU4YzY3LlByb3Bl
cnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ18yMjg3MTQ1N2Q0ZmQ0
NjU2Yjk0YzE4ZWM3YjhlOGM2Ny5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRl
eGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAEJ1ZmZlcnMA
RmluaXNoT3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAE9iamVjdABnZXRfRW5kT2ZSb3dzZXQA
U2V0RW5kT2ZSb3dzZXQAU3BsaXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21w
b25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9z
b2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABQcmltZU91dHB1
dABBZGRSb3cASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQBvcF9J
bmVxdWFsaXR5AAAAAAEAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4A
bwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAg
AHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4A
AA9JAG4AcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQAIAAwAABxUwBDAF8AMgAyADgANwAxADQANQA3
AGQANABmAGQANAA2ADUANgBiADkANABjADEAOABlAGMANwBiADgAZQA4AGMANgA3AC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAOp7ZCdklTSJvyh9eTTppVAAQgAQEI
AyAAAQUgAQEREQQgAQEOBSABARFdBgcDDh0OCAUAAgIODgYgAR0OHQMJIAMBEkEdCBJFAwYSQQMG
HQgEIAEOCAQgAQIIAyAAAgUgAgEIHAYgAgIOEXkFIAEdCAgDBwEIBgACCBJFDgcAARJ9EYCBBSAA
EoCFByACAQ4SgIUIt3pcVhk04IkIiYRdzYCAzJEDBhIYAwYSHAMGEhACBggDBhJJAwYSVQMGElkD
BhIkBSABARIMAyAADgQgAQECCSAEAQgOEkESRQsgBAEIHQgdEkESRQUgAQESSQQAABJVBAAAElkF
AAEBElkEAAASJAMAAAEDKAAOAygAAgQIABJVBAgAElkECAASJAgBAAgAAAAAAB4BAAEAVAIWV3Jh
cE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfMjI4NzE0NTdkNGZkNDY1NmI5NGMx
OGVjN2I4ZThjNjcAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0
LjcEAQAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAACgNQAAAAAAAAAAAAC6NQAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAArDUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADIAMgA4ADcAMQA0ADUANwBkADQAZgBkADQANgA1ADYAYgA5ADQAYwAxADgAZQBjADcA
YgA4AGUAOABjADYANwAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMgAyADgANwAxADQA
NQA3AGQANABmAGQANAA2ADUANgBiADkANABjADEAOABlAGMANwBiADgAZQA4AGMANgA3AC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAyADIA
OAA3ADEANAA1ADcAZAA0AGYAZAA0ADYANQA2AGIAOQA0AGMAMQA4AGUAYwA3AGIAOABlADgAYwA2
ADcALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMgAyADgA
NwAxADQANQA3AGQANABmAGQANAA2ADUANgBiADkANABjADEAOABlAGMANwBiADgAZQA4AGMANgA3
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADMNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_22871457d4fd4656b94c18ec7b8e8c67</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">81ddd329427bf42c77024b4795117355</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">239230bcfb3d477646f007fdd4165f8abb5b54af</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">D4</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Save Indication Data\SC - Product IDs.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Save Indication Data\SC - Product IDs.Inputs[Input 0].Columns[indication_id]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_id"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_id]" />
                    <inputColumn
                      refId="Package\Save Indication Data\SC - Product IDs.Inputs[Input 0].Columns[indication_product_ids]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_product_ids"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_product_ids]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Save Indication Data\SC - Product IDs.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save Indication Data\SC - Product IDs.Outputs[Output 0].Columns[indication_id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Save Indication Data\SC - Product IDs.Outputs[Output 0].Columns[indication_id]"
                      name="indication_id" />
                    <outputColumn
                      refId="Package\Save Indication Data\SC - Product IDs.Outputs[Output 0].Columns[indication_product_id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Save Indication Data\SC - Product IDs.Outputs[Output 0].Columns[indication_product_id]"
                      name="indication_product_id" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Save Indication Data\SC - Synonym IDs"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SC - Synonym IDs"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_22871457d4fd4656b94c18ec7b8e8c67.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{00C4F087-F73E-4E97-AAAD-AEE9AF786A28}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_22871457d4fd4656b94c18ec7b8e8c67</RootNamespace>
    <AssemblyName>SC_22871457d4fd4656b94c18ec7b8e8c67</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string sSynonymList = Row.indicationsynonymids;
        try
        {
            if (sSynonymList != "")
            {           
                string[] sTokens = sSynonymList.Split('|');
                for (int i = 0; i < sTokens.Length; i++)
                {
                    Output0Buffer.AddRow();
                    Output0Buffer.indicationid = Row.indicationid;
                    Output0Buffer.indicationsynonymid = sTokens[i];
                }
            }
        }
        catch(Exception ex)
        {
            // Oopps
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String indicationid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool indicationid_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String indicationsynonymids
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool indicationsynonymids_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String indicationid
    {
        set
        {
            this[0] = value;
        }
    }
    public bool indicationid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String indicationsynonymid
    {
        set
        {
            this[1] = value;
        }
    }
    public bool indicationsynonymid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_22871457d4fd4656b94c18ec7b8e8c67.Properties.Settings.get_Default():SC_22871457d4fd4656b94c18ec7b8e8c67.Properties.Sett" +
    "ings")]

namespace SC_22871457d4fd4656b94c18ec7b8e8c67.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_22871457d4fd4656b94c18ec7b8e8c67</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_22871457d4fd4656b94c18ec7b8e8c67</msb:DisplayName>
    <msb:ProjectId>{D13C5567-F14E-4C23-8621-5E14F79DC588}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_22871457d4fd4656b94c18ec7b8e8c67.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_22871457d4fd4656b94c18ec7b8e8c67")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_22871457d4fd4656b94c18ec7b8e8c67")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_22871457d4fd4656b94c18ec7b8e8c67.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_22871457d4fd4656b94c18ec7b8e8c67.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_22871457d4fd4656b94c18ec7b8e8c67.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_22871457d4fd4656b94c18ec7b8e8c67.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_22871457d4fd4656b94c18ec7b8e8c67.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_22871457d4fd4656b94c18ec7b8e8c67.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACHUcmEAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAyjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHg1AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA0BUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACs
NQAAAAAAAEgAAAACAAUACCMAALgRAAABAAAAAAAAAMA0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAUAZAAAAAEAABEDbwgAAAYK
BnIBAABwKBIAAAosSgYXjRwAAAElFh98nW8TAAAKCxYMKy4CewMAAARvEQAABgJ7AwAABANvBgAA
Bm8NAAAGAnsDAAAEBwiabw8AAAYIF1gMCAeOaTLM3gMm3gAqARAAAAAABwBZYAADDgAAAR4CKBQA
AAYqKgIDBAUoFAAACipSAnsVAAAKAnsWAAAKFpRvFwAACioiAhYoGAAACipSAnsVAAAKAnsWAAAK
F5RvFwAACioiAhcoGAAACioeAigZAAAKKh4CKBoAAAoqJgIWAygbAAAKKloDLAgCFigcAAAKKnID
AABwcx0AAAp6JgIXAygbAAAKKloDLAgCFygcAAAKKnIDAABwcx0AAAp6HgIoHgAACioeAigfAAAK
Kn4CKCAAAAoCAnMcAAAGfQEAAAQCAnMdAAAGfQIAAAQqAAAAEzAEAE8AAAAAAAAABHKgAABwGm8h
AAAKLBUCBQIDKCIAAAoOBHMFAAAGbxoAAAYFbyMAAAosIwICewQAAAQXWH0EAAAEAnsEAAAEFzMM
Am8WAAAGAigXAAAGKgYqbgJ7AwAABCwSAnsDAAAEbxIAAAYCFH0DAAAEKgAAABMwBQA9AAAAAgAA
ERYKKy4EBpQOBHKwAABwKCQAAAozGQIFBpoCBAaUKCIAAAoOBHMMAAAGfQMAAAQGF1gKBgMyzgJv
GQAABipKKwcCA28bAAAGA28KAAAGLfEqOgIoJQAACgIDfQUAAAQqOgIoJQAACgIDfQYAAAQqHgIo
JQAACiqufgcAAAQtHnLCAABw0AgAAAIoJgAACm8nAAAKcygAAAqABwAABH4HAAAEKhp+CAAABCoe
AoAIAAAEKhp+CQAABCoeAigpAAAKKi5zIwAABoAJAAAEKkJTSkIBAAEAAAAAAAwAAAB2NC4wLjMw
MzE5AAAAAAUAbAAAAMgGAAAjfgAANAcAAGgHAAAjU3RyaW5ncwAAAACcDgAANAEAACNVUwDQDwAA
EAAAACNHVUlEAAAA4A8AANgBAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAAh
AAAACQAAAAkAAAAkAAAAGAAAACkAAAAQAAAAAgAAAAQAAAALAAAADAAAAAEAAAAEAAAAAQAAAAAA
VgMBAAAAAAAGAE0COgUGAOECOgUGAJkBDgUPAK4FAAAGAMYBRgQGADACRgQGABECRgQGAMgCRgQG
AG0CRgQGAIYCRgQGAN0BRgQGAPgBHAMKAKEC5gAGAGgE/gMKANYE5gAOAMcE5gAKAI8E5gAKALcG
5gAGAGEG/gMGAHwBDgUGAOcEWgUGAIMEMQQSAEwBQAMSAK0BQAMSADQBHAQGAGEBOgUGADkD/gMG
AKcE/gMGAFgE/gMGAHIE/gMGAAcB/gMGALgA/gMGAE8HRgQAAAAAJQAAAAAAAQABAAEAEAARBAAA
FAABAAEAAQAQAKwEAAA9AAEABQABABAAuQQAAD0AAQAMAAEAEACZBgAASQABABQAAQAQACsGAABN
AAUAHAABABAA7AUAAE0ABgAdAAAAEABhBb0FTQAHAB4AAAEQABsGvQVlAAkAIgAGACsGlQAGAOwF
mQAGALkEnQABAEsAoQABAKcGpAABAKcGpAARAAUEqAARACQBrAARAKgAsABQIAAAAADGAP8CBgAB
AFggAAAAAMYACgMGAAEAYCAAAAAAxgAsB7QAAQDgIAAAAACGGPcEBgACAOggAAAAAIYY9wQvAAIA
8yAAAAAAhgiGALoABQAIIQAAAACGCJ0DSwAFABEhAAAAAIYIIQW6AAUAJiEAAAAAhgjNA0sABQAv
IQAAAACGAEMHSwAFADchAAAAAIYAewZLAAUA6CAAAAAAhhj3BC8ABQA/IQAAAACGCJcAEAAIAEkh
AAAAAIYItQO+AAkAYCEAAAAAhghuABAACgBqIQAAAACGCH4DvgALAIEhAAAAAIYAJQcGAAwAiSEA
AAAAhgB4BgYADAA3IQAAAACGAHsGSwAMAJEhAAAAAIYY9wQGAAwAtCEAAAAAxgAMB8MADAAPIgAA
AADGAT8GBgAQABEiAAAAAIEAWgAGABAAMCIAAAAAxgAZB80AEAAPIgAAAADGAU0GBgAUAHkiAAAA
AMYBBQe0ABQADyIAAAAAxgEsB7QAFQCMIgAAAACGGPcE2QAWAJsiAAAAAIYY9wTZABcAqiIAAAAA
gxj3BAYAGACyIgAAAACTCOME3wAYAN4iAAAAAJMIDAHkABgA5SIAAAAAkwgYAekAGADtIgAAAACW
CI0G7wAZAPQiAAAAAIYY9wQGABkA/CIAAAAAkRj9BPQAGQAAAAEARwcAAAEA3AQAAAIA9gUAAAMA
nQQAAAEA3AQAAAIA9gUAAAMAnQQAAAEAFgMAAAEAFgMAAAEAFgMAAAEAFgMAAAEALgAAAAIA3AAA
AAMA3AQAAAQAnQQAAAEARQYAAAIABAUAAAMANwYAAAQAnQQAAAEA3AQAAAEARwcAAAEAvQYAAAEA
vQYAAAEAFgMJAPcEAQARAPcEBgAZAPcECgApAPcEEAAxAPcEEAA5APcEEABBAPcEEABJAPcEEABR
APcEEABZAPcEEABhAPcEEABpAPcEBgChAPcEBgDBAPcEFQDRAPcEBgCRAP8CBgCRAAoDBgDZAFgH
IgDZAIcGKAB5APcELwB5ANwEOQB5APYFPQCBADYDQQB5AOYDRgB5AEMHSwB5AHsGSwB5APUDTwB5
AO0DAQDpAPcEEAB5ACUHBgB5AHgGBgCRAPcEBgDZACQGVQCRAAoGXACBAGgGSwCRADYAZgCZAPcE
BgD5AMoAbQD5AEsHdQCpAPcEewDJAPcEBgAuAAsADwEuABMAGAEuABsANwEuACMAQAEuACsAaQEu
ADMAaQEuADsAaQEuAEMAQAEuAEsAbwEuAFMAaQEuAFsAhgFDAGMA0AEDAWsA0AEhAXsA0AEpAXMA
NwFJAXMANwEbAGIAAwABAAQABQAIAAkACQALAAAAmwD4AAAAuQP8AAAAJQX4AAAA0QP8AAAAmwD4
AAAAuQP8AAAAcgD4AAAAggP8AAAA5wQAAQAALAEFAQAAkQYKAQIABgADAAIABwAFAAIACAAHAAIA
CQAJAAEADQALAAEADgANAAEADwAPAAEAEAARAAIAHwATAAIAIAAVAAEAIQAVAAIAIgAXAASAAAAB
AAAAAAAAAAAAAAAAAAEAAAAEAAAAAAAAAAAAAACDAEIAAAAAAA8AAAAAAAAAAAAAAIwAxwYAAAAA
DwAAAAAAAAAAAAAAjADkBgAAAAAEAAAAAAAAAAAAAACDAP4DAAAAAAAAAAABAAAAawUAAAAAAFND
XzIyODcxNDU3ZDRmZDQ2NTZiOTRjMThlYzdiOGU4YzY3ADxNb2R1bGU+AElucHV0SUQAR2V0T3V0
cHV0SUQAbXNjb3JsaWIASW5wdXRzRmluaXNoZWQATWFya091dHB1dHNGaW5pc2hlZABzZXRfaW5k
aWNhdGlvbnN5bm9ueW1pZABnZXRfaW5kaWNhdGlvbmlkAHNldF9pbmRpY2F0aW9uaWQAZGVmYXVs
dEluc3RhbmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0
cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2Vt
Ymx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2Ny
aXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21w
b25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5nAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ18y
Mjg3MTQ1N2Q0ZmQ0NjU2Yjk0YzE4ZWM3YjhlOGM2Ny5kbGwAc2V0X2luZGljYXRpb25zeW5vbnlt
aWRfSXNOdWxsAGdldF9pbmRpY2F0aW9uaWRfSXNOdWxsAHNldF9pbmRpY2F0aW9uaWRfSXNOdWxs
AGdldF9pbmRpY2F0aW9uc3lub255bWlkc19Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0A
cmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFs
aXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmlu
Z0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAAQ2hhcgBJbnB1
dDBCdWZmZXIAT3V0cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jl
c291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBn
ZXRfaW5kaWNhdGlvbnN5bm9ueW1pZHMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBT
eXN0ZW0uUmVzb3VyY2VzAFNDXzIyODcxNDU3ZDRmZDQ2NTZiOTRjMThlYzdiOGU4YzY3LlByb3Bl
cnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ18yMjg3MTQ1N2Q0ZmQ0
NjU2Yjk0YzE4ZWM3YjhlOGM2Ny5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRl
eGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAEJ1ZmZlcnMA
RmluaXNoT3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAE9iamVjdABnZXRfRW5kT2ZSb3dzZXQA
U2V0RW5kT2ZSb3dzZXQAU3BsaXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21w
b25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9z
b2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABQcmltZU91dHB1
dABBZGRSb3cASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQBvcF9J
bmVxdWFsaXR5AAAAAAEAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4A
bwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAg
AHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4A
AA9JAG4AcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQAIAAwAABxUwBDAF8AMgAyADgANwAxADQANQA3
AGQANABmAGQANAA2ADUANgBiADkANABjADEAOABlAGMANwBiADgAZQA4AGMANgA3AC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAABpXZquXmkiQ45PeGAEluxqAAQgAQEI
AyAAAQUgAQEREQQgAQEOBSABARFdBgcDDh0OCAUAAgIODgYgAR0OHQMJIAMBEkEdCBJFAwYSQQMG
HQgEIAEOCAQgAQIIAyAAAgUgAgEIHAYgAgIOEXkFIAEdCAgDBwEIBgACCBJFDgcAARJ9EYCBBSAA
EoCFByACAQ4SgIUIt3pcVhk04IkIiYRdzYCAzJEDBhIYAwYSHAMGEhACBggDBhJJAwYSVQMGElkD
BhIkBSABARIMAyAADgQgAQECCSAEAQgOEkESRQsgBAEIHQgdEkESRQUgAQESSQQAABJVBAAAElkF
AAEBElkEAAASJAMAAAEDKAAOAygAAgQIABJVBAgAElkECAASJAgBAAgAAAAAAB4BAAEAVAIWV3Jh
cE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfMjI4NzE0NTdkNGZkNDY1NmI5NGMx
OGVjN2I4ZThjNjcAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0
LjcEAQAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAACgNQAAAAAAAAAAAAC6NQAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAArDUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADIAMgA4ADcAMQA0ADUANwBkADQAZgBkADQANgA1ADYAYgA5ADQAYwAxADgAZQBjADcA
YgA4AGUAOABjADYANwAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMgAyADgANwAxADQA
NQA3AGQANABmAGQANAA2ADUANgBiADkANABjADEAOABlAGMANwBiADgAZQA4AGMANgA3AC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAyADIA
OAA3ADEANAA1ADcAZAA0AGYAZAA0ADYANQA2AGIAOQA0AGMAMQA4AGUAYwA3AGIAOABlADgAYwA2
ADcALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMgAyADgA
NwAxADQANQA3AGQANABmAGQANAA2ADUANgBiADkANABjADEAOABlAGMANwBiADgAZQA4AGMANgA3
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADMNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_22871457d4fd4656b94c18ec7b8e8c67</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">18564bec2cba4abfddb46bbffb1aaf4c</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">78daace38ddad039f3fa1db14830e0b4ddc346f0</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">0C</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Save Indication Data\SC - Synonym IDs.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Save Indication Data\SC - Synonym IDs.Inputs[Input 0].Columns[indication_id]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_id"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_id]" />
                    <inputColumn
                      refId="Package\Save Indication Data\SC - Synonym IDs.Inputs[Input 0].Columns[indication_synonym_ids]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_synonym_ids"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_synonym_ids]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Save Indication Data\SC - Synonym IDs.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save Indication Data\SC - Synonym IDs.Outputs[Output 0].Columns[indication_id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Save Indication Data\SC - Synonym IDs.Outputs[Output 0].Columns[indication_id]"
                      name="indication_id" />
                    <outputColumn
                      refId="Package\Save Indication Data\SC - Synonym IDs.Outputs[Output 0].Columns[indication_synonym_id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Save Indication Data\SC - Synonym IDs.Outputs[Output 0].Columns[indication_synonym_id]"
                      name="indication_synonym_id" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Save Indication Data\Sort Product"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort Product"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Save Indication Data\Sort Product.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Save Indication Data\Sort Product.Inputs[Sort Input].Columns[indication_id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_id"
                      lineageId="Package\Save Indication Data\SC - Product IDs.Outputs[Output 0].Columns[indication_id]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Save Indication Data\Sort Product.Inputs[Sort Input].Columns[indication_product_id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_product_id"
                      lineageId="Package\Save Indication Data\SC - Product IDs.Outputs[Output 0].Columns[indication_product_id]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Save Indication Data\Sort Product.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save Indication Data\Sort Product.Outputs[Sort Output].Columns[indication_id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Save Indication Data\Sort Product.Outputs[Sort Output].Columns[indication_id]"
                      name="indication_id"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Save Indication Data\SC - Product IDs.Outputs[Output 0].Columns[indication_id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Save Indication Data\Sort Product.Outputs[Sort Output].Columns[indication_product_id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Save Indication Data\Sort Product.Outputs[Sort Output].Columns[indication_product_id]"
                      name="indication_product_id"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Save Indication Data\SC - Product IDs.Outputs[Output 0].Columns[indication_product_id]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Save Indication Data\Sort Synonym"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort Synonym"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Save Indication Data\Sort Synonym.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Save Indication Data\Sort Synonym.Inputs[Sort Input].Columns[indication_id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_id"
                      lineageId="Package\Save Indication Data\SC - Synonym IDs.Outputs[Output 0].Columns[indication_id]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Save Indication Data\Sort Synonym.Inputs[Sort Input].Columns[indication_synonym_id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_synonym_id"
                      lineageId="Package\Save Indication Data\SC - Synonym IDs.Outputs[Output 0].Columns[indication_synonym_id]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Save Indication Data\Sort Synonym.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save Indication Data\Sort Synonym.Outputs[Sort Output].Columns[indication_id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Save Indication Data\Sort Synonym.Outputs[Sort Output].Columns[indication_id]"
                      name="indication_id"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Save Indication Data\SC - Synonym IDs.Outputs[Output 0].Columns[indication_id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Save Indication Data\Sort Synonym.Outputs[Sort Output].Columns[indication_synonym_id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Save Indication Data\Sort Synonym.Outputs[Sort Output].Columns[indication_synonym_id]"
                      name="indication_synonym_id"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Save Indication Data\SC - Synonym IDs.Outputs[Output 0].Columns[indication_synonym_id]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Save Indication Data\TimeScape Create Product List"
              componentClassID="Microsoft.ManagedComponentHost"
              description="TimeScape Create List Transform"
              name="TimeScape Create Product List"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Xenomorph.TimeScape.SSIS.CreateListTransform, Xenomorph.TimeScape.SSIS, Version=5.0.4000.0, Culture=neutral, PublicKeyToken=2adfa95c2785233e</property>
                <property
                  dataType="System.String"
                  description="Column(s) that delimit the list, i.e. the list value spans the range for which these column values are constant. Format: Comma seperated list of pipeline column names or zero-based indexes."
                  expressionType="Notify"
                  name="List Delimiter Columns">indication_id</property>
                <property
                  dataType="System.String"
                  description="Column(s) output to the second transformation output containing the list values. Format: Comma seperated list of pipeline column names or zero-based indexes."
                  expressionType="Notify"
                  name="List Output Columns"
                  typeConverter="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">indication_id</property>
                <property
                  dataType="System.String"
                  description="Array of target properties corresponding to property input columns. Format: [ColumnName, ColumnHeader, ColumnDataType];[,,]; or [ColumnName, ColumnHeader, ColumnDataType, ColumnRefDatabaseOpt, ColumnRefCodeTypeOpt]"
                  expressionType="Notify"
                  name="Column Definitions"
                  typeConverter="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">[indication_product_id,indication_product_id,ItemRef,,rms_product_id]</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Save Indication Data\TimeScape Create Product List.Inputs[Input]"
                  errorOrTruncationOperation="Could not add row to list"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Save Indication Data\TimeScape Create Product List.Inputs[Input].Columns[indication_id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_id"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Save Indication Data\Sort Product.Outputs[Sort Output].Columns[indication_id]" />
                    <inputColumn
                      refId="Package\Save Indication Data\TimeScape Create Product List.Inputs[Input].Columns[indication_product_id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_product_id"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Save Indication Data\Sort Product.Outputs[Sort Output].Columns[indication_product_id]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Save Indication Data\TimeScape Create Product List.Outputs[Output]"
                  exclusionGroup="1"
                  name="Output"
                  synchronousInputId="Package\Save Indication Data\TimeScape Create Product List.Inputs[Input]">
                  <externalMetadataColumns
                    isUsed="True" />
                </output>
                <output
                  refId="Package\Save Indication Data\TimeScape Create Product List.Outputs[Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Error Output"
                  synchronousInputId="Package\Save Indication Data\TimeScape Create Product List.Inputs[Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save Indication Data\TimeScape Create Product List.Outputs[Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Save Indication Data\TimeScape Create Product List.Outputs[Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Save Indication Data\TimeScape Create Product List.Outputs[Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Save Indication Data\TimeScape Create Product List.Outputs[Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Save Indication Data\TimeScape Create Product List.Outputs[List Output]"
                  name="List Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save Indication Data\TimeScape Create Product List.Outputs[List Output].Columns[indication_id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Save Indication Data\TimeScape Create Product List.Outputs[List Output].Columns[indication_id]"
                      name="indication_id">
                      <properties>
                        <property
                          dataType="System.Int32"
                          name="InputColumnLineageID">122</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Save Indication Data\TimeScape Create Product List.Outputs[List Output].Columns[TimeScape List]"
                      codePage="1252"
                      dataType="text"
                      description="TimeScape List"
                      lineageId="Package\Save Indication Data\TimeScape Create Product List.Outputs[List Output].Columns[TimeScape List]"
                      name="TimeScape List" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True" />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Save Indication Data\TimeScape Create Synonym List"
              componentClassID="Microsoft.ManagedComponentHost"
              description="TimeScape Create List Transform"
              name="TimeScape Create Synonym List"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Xenomorph.TimeScape.SSIS.CreateListTransform, Xenomorph.TimeScape.SSIS, Version=5.0.4000.0, Culture=neutral, PublicKeyToken=2adfa95c2785233e</property>
                <property
                  dataType="System.String"
                  description="Column(s) that delimit the list, i.e. the list value spans the range for which these column values are constant. Format: Comma seperated list of pipeline column names or zero-based indexes."
                  expressionType="Notify"
                  name="List Delimiter Columns">indication_id</property>
                <property
                  dataType="System.String"
                  description="Column(s) output to the second transformation output containing the list values. Format: Comma seperated list of pipeline column names or zero-based indexes."
                  expressionType="Notify"
                  name="List Output Columns"
                  typeConverter="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">indication_id</property>
                <property
                  dataType="System.String"
                  description="Array of target properties corresponding to property input columns. Format: [ColumnName, ColumnHeader, ColumnDataType];[,,]; or [ColumnName, ColumnHeader, ColumnDataType, ColumnRefDatabaseOpt, ColumnRefCodeTypeOpt]"
                  expressionType="Notify"
                  name="Column Definitions"
                  typeConverter="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">[indication_synonym_id,indication_synonym_id,String]</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Save Indication Data\TimeScape Create Synonym List.Inputs[Input]"
                  errorOrTruncationOperation="Could not add row to list"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Save Indication Data\TimeScape Create Synonym List.Inputs[Input].Columns[indication_id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_id"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Save Indication Data\Sort Synonym.Outputs[Sort Output].Columns[indication_id]" />
                    <inputColumn
                      refId="Package\Save Indication Data\TimeScape Create Synonym List.Inputs[Input].Columns[indication_synonym_id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_synonym_id"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Save Indication Data\Sort Synonym.Outputs[Sort Output].Columns[indication_synonym_id]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Save Indication Data\TimeScape Create Synonym List.Outputs[Output]"
                  exclusionGroup="1"
                  name="Output"
                  synchronousInputId="Package\Save Indication Data\TimeScape Create Synonym List.Inputs[Input]">
                  <externalMetadataColumns
                    isUsed="True" />
                </output>
                <output
                  refId="Package\Save Indication Data\TimeScape Create Synonym List.Outputs[Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Error Output"
                  synchronousInputId="Package\Save Indication Data\TimeScape Create Synonym List.Inputs[Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save Indication Data\TimeScape Create Synonym List.Outputs[Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Save Indication Data\TimeScape Create Synonym List.Outputs[Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Save Indication Data\TimeScape Create Synonym List.Outputs[Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Save Indication Data\TimeScape Create Synonym List.Outputs[Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Save Indication Data\TimeScape Create Synonym List.Outputs[List Output]"
                  name="List Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save Indication Data\TimeScape Create Synonym List.Outputs[List Output].Columns[indication_id]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Save Indication Data\TimeScape Create Synonym List.Outputs[List Output].Columns[indication_id]"
                      name="indication_id">
                      <properties>
                        <property
                          dataType="System.Int32"
                          name="InputColumnLineageID">221</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Save Indication Data\TimeScape Create Synonym List.Outputs[List Output].Columns[TimeScape List]"
                      codePage="1252"
                      dataType="text"
                      description="TimeScape List"
                      lineageId="Package\Save Indication Data\TimeScape Create Synonym List.Outputs[List Output].Columns[TimeScape List]"
                      name="TimeScape List" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True" />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Save Indication Data\TimeScape Save Indication Data"
              componentClassID="Microsoft.ManagedComponentHost"
              description="TimeScape Values Destination"
              name="TimeScape Save Indication Data"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.String"
                  description="Target category of all properties to be saved."
                  expressionType="Notify"
                  name="Category">Indication</property>
                <property
                  dataType="System.String"
                  description="Code Type to use for all item codes. This is used when CodeTypeColumn = -1 as the code type is not provided in the column data."
                  expressionType="Notify"
                  name="CodeType">RMS_INDICATION_ID</property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the item code type to use."
                  expressionType="Notify"
                  name="CodeTypeColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">-1</property>
                <property
                  dataType="System.String"
                  description="Array of target properties corresponding to property input columns. Format: [ColumnName, TargetProperty, NoDataTokenOpt];[,,]; or [ColumnName, TargetProperty, NoDataTokenOpt, RefDatabase, RefCodeType]"
                  expressionType="Notify"
                  name="TargetProperties"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">[indication_name,indication_name,];[indication_synonym_ids,indication_synonym_ids,];[indication_product_ids,indication_product_ids,];[indication_child_relationship_ids,indication_child_relationship_ids,];[indication_classification_id,indication_classification_id,];[indication_classification,indication_classification,];[Updated,Updated,]</property>
                <property
                  dataType="System.String"
                  description="Target data source to use for all values. This is used when DataSourceColumn = -1 as the data source is not provided in the column data."
                  expressionType="Notify"
                  name="DataSource"></property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the target data source."
                  expressionType="Notify"
                  name="DataSourceColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">-1</property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the item code to use."
                  expressionType="Notify"
                  name="CodeColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">0</property>
                <property
                  dataType="System.DateTime"
                  description="The date of all values in the ValueColumn of the data columns when the target property is historic. Save date is ignored for static target properties."
                  expressionType="Notify"
                  name="SaveDate"
                  typeConverter="System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">1899-12-30T00:00:00-05:00</property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the date to use for historic properties. Save date is ignored for static target properties."
                  expressionType="Notify"
                  name="SaveDateColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">7</property>
                <property
                  dataType="System.Int32"
                  description="The number of input rows to process before saving to the database."
                  expressionType="Notify"
                  name="RowsPerSave"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">1</property>
                <property
                  dataType="System.String"
                  description="Put here the error numbers (comma separated), considered fatal for the package execution."
                  expressionType="Notify"
                  name="FatalErrors"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"></property>
                <property
                  dataType="System.UInt32"
                  description="The &quot;save value&quot; operation will be repeated up to the specified number of retries, if an error considered to be fatal occurs."
                  expressionType="Notify"
                  name="ServerRetries"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">0</property>
                <property
                  dataType="System.String"
                  description="Date column format if &quot;SaveDateColumn&quot; property is set.&#xA;Check this link for supported formats: https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings.&#xA;QL+ query can also be used"
                  expressionType="Notify"
                  name="DateFormat"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"></property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Xenomorph.TimeScape.SSIS.ValuesDestination, Xenomorph.TimeScape.SSIS, Version=5.0.4000.0, Culture=neutral, PublicKeyToken=2adfa95c2785233e</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Save Indication Data\TimeScape Save Indication Data.Connections[TimeScapeDatabaseConnector]"
                  connectionManagerID="{F1478C8A-4B9E-42EF-B758-9D8D8F6B6E35}:external"
                  connectionManagerRefId="Project.ConnectionManagers[Global Raw Database]"
                  name="TimeScapeDatabaseConnector" />
              </connections>
              <inputs>
                <input
                  refId="Package\Save Indication Data\TimeScape Save Indication Data.Inputs[TimeScape Values Destination]"
                  errorOrTruncationOperation="Property value could not be saved."
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="TimeScape Values Destination">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Save Indication Data\TimeScape Save Indication Data.Inputs[TimeScape Values Destination].Columns[indication_id]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_id"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_id]" />
                    <inputColumn
                      refId="Package\Save Indication Data\TimeScape Save Indication Data.Inputs[TimeScape Values Destination].Columns[indication_name]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_name"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_name]" />
                    <inputColumn
                      refId="Package\Save Indication Data\TimeScape Save Indication Data.Inputs[TimeScape Values Destination].Columns[indication_synonym_ids]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_synonym_ids"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_synonym_ids]" />
                    <inputColumn
                      refId="Package\Save Indication Data\TimeScape Save Indication Data.Inputs[TimeScape Values Destination].Columns[indication_child_relationship_ids]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_child_relationship_ids"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_child_relationship_ids]" />
                    <inputColumn
                      refId="Package\Save Indication Data\TimeScape Save Indication Data.Inputs[TimeScape Values Destination].Columns[indication_classification_id]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_classification_id"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_classification_id]" />
                    <inputColumn
                      refId="Package\Save Indication Data\TimeScape Save Indication Data.Inputs[TimeScape Values Destination].Columns[indication_classification]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_classification"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_classification]" />
                    <inputColumn
                      refId="Package\Save Indication Data\TimeScape Save Indication Data.Inputs[TimeScape Values Destination].Columns[BusinessDate]"
                      cachedDataType="date"
                      cachedName="BusinessDate"
                      lineageId="Package\Save Indication Data\DC - Edit Columns.Outputs[Derived Column Output].Columns[BusinessDate]" />
                    <inputColumn
                      refId="Package\Save Indication Data\TimeScape Save Indication Data.Inputs[TimeScape Values Destination].Columns[Updated]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Updated"
                      lineageId="Package\Save Indication Data\DC - Edit Columns.Outputs[Derived Column Output].Columns[Updated]" />
                    <inputColumn
                      refId="Package\Save Indication Data\TimeScape Save Indication Data.Inputs[TimeScape Values Destination].Columns[indication_product_ids]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_product_ids"
                      lineageId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output].Columns[indication_product_ids]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Save Indication Data\TimeScape Save Indication Data.Outputs[Values Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Values Destination Error Output"
                  synchronousInputId="Package\Save Indication Data\TimeScape Save Indication Data.Inputs[TimeScape Values Destination]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save Indication Data\TimeScape Save Indication Data.Outputs[Values Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Save Indication Data\TimeScape Save Indication Data.Outputs[Values Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Save Indication Data\TimeScape Save Indication Data.Outputs[Values Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Save Indication Data\TimeScape Save Indication Data.Outputs[Values Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Save Indication Data\TimeScape Save Product List"
              componentClassID="Microsoft.ManagedComponentHost"
              description="TimeScape Value Destination"
              name="TimeScape Save Product List"
              usesDispositions="true">
              <properties>
                <property
                  dataType="System.String"
                  description="Code Type to use for all item codes. This is used when CodeTypeColumn = -1 as the code type is not provided in the column data."
                  expressionType="Notify"
                  name="CodeType">RMS_INDICATION_ID</property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the item code type to use."
                  expressionType="Notify"
                  name="CodeTypeColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">-1</property>
                <property
                  dataType="System.String"
                  description="Target property name to use for all values. This is used when PropertyNameColumn = -1 as the property name is not provided in the column data."
                  expressionType="Notify"
                  name="PropertyName">indication_product_ids_list</property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the target property name."
                  expressionType="Notify"
                  name="PropertyNameColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">-1</property>
                <property
                  dataType="System.String"
                  description="Target data source to use for all values. This is used when DataSourceColumn = -1 as the data source is not provided in the column data. If target property is single sourced this value must be left blank or set to 'Internal'."
                  expressionType="Notify"
                  name="DataSource"></property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the target data source."
                  expressionType="Notify"
                  name="DataSourceColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">-1</property>
                <property
                  dataType="System.Int32"
                  description="The data type of all values in the ValueColumn in the column data."
                  expressionType="Notify"
                  name="DataType"
                  typeConverter="Xenomorph.DbDataType, Xenomorph.Generic, Version=5.0.4000.0, Culture=neutral, PublicKeyToken=2adfa95c2785233e">8</property>
                <property
                  dataType="System.Int32"
                  description="The numer of data rows to cache before saving to the database."
                  expressionType="Notify"
                  name="CacheSize"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">10000</property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the item code to use."
                  expressionType="Notify"
                  name="CodeColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">1</property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the value to save."
                  expressionType="Notify"
                  name="ValueColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">0</property>
                <property
                  dataType="System.String"
                  description="Reference database to use for all values when the data type of the values to save is Reference. This is used when ReferenceDatabaseColumn = -1 as the database is not provided in the column data."
                  expressionType="Notify"
                  name="ReferenceDatabase"></property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the reference database to use when the data type of the values to save is Reference."
                  expressionType="Notify"
                  name="ReferenceDatabaseColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">-1</property>
                <property
                  dataType="System.String"
                  description="Reference code type to use for all values when the data type of the values to save is Reference. This is used when ReferenceCodeTypeColumn = -1 as the reference code type is not provided in the column data."
                  expressionType="Notify"
                  name="ReferenceCodeType"></property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the reference code type to use when the data type of the values to save is Reference."
                  expressionType="Notify"
                  name="ReferenceCodeTypeColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">-1</property>
                <property
                  dataType="System.Null"
                  description="The date of all values in the ValueColumn of the data columns when the target property is historic. This is used when SaveDateColumn = -1. Leave blank for static target properties."
                  expressionType="Notify"
                  name="SaveDate"
                  typeConverter="System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the date of the value in the ValueColumn when the target property is historic."
                  expressionType="Notify"
                  name="SaveDateColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">-1</property>
                <property
                  dataType="System.String"
                  description="If property holds tick data, specifies the type of overwriting for existing series (default = All). All = append to existing series. Day = first remove all values in each overlapping day."
                  expressionType="Notify"
                  name="TickOverwriteType">All</property>
                <property
                  dataType="System.Boolean"
                  description="If True the process is audited, else it is not audited."
                  expressionType="Notify"
                  name="AuditProcess"
                  typeConverter="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">false</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Xenomorph.TimeScape.SSIS.ValueDestination, Xenomorph.TimeScape.SSIS, Version=5.0.4000.0, Culture=neutral, PublicKeyToken=2adfa95c2785233e</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Save Indication Data\TimeScape Save Product List.Connections[TimeScape Database Connector]"
                  connectionManagerID="{F1478C8A-4B9E-42EF-B758-9D8D8F6B6E35}:external"
                  connectionManagerRefId="Project.ConnectionManagers[Global Raw Database]"
                  description="The target database to save all item values to."
                  name="TimeScape Database Connector" />
              </connections>
              <inputs>
                <input
                  refId="Package\Save Indication Data\TimeScape Save Product List.Inputs[TimeScape Value Destination]"
                  errorOrTruncationOperation="Property value could not be saved."
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="TimeScape Value Destination">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Save Indication Data\TimeScape Save Product List.Inputs[TimeScape Value Destination].Columns[TimeScape List]"
                      cachedCodepage="1252"
                      cachedDataType="text"
                      cachedName="TimeScape List"
                      lineageId="Package\Save Indication Data\TimeScape Create Product List.Outputs[List Output].Columns[TimeScape List]" />
                    <inputColumn
                      refId="Package\Save Indication Data\TimeScape Save Product List.Inputs[TimeScape Value Destination].Columns[indication_id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_id"
                      lineageId="Package\Save Indication Data\TimeScape Create Product List.Outputs[List Output].Columns[indication_id]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Save Indication Data\TimeScape Save Product List.Outputs[Value Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Value Destination Error Output"
                  synchronousInputId="Package\Save Indication Data\TimeScape Save Product List.Inputs[TimeScape Value Destination]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save Indication Data\TimeScape Save Product List.Outputs[Value Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Save Indication Data\TimeScape Save Product List.Outputs[Value Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Save Indication Data\TimeScape Save Product List.Outputs[Value Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Save Indication Data\TimeScape Save Product List.Outputs[Value Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Save Indication Data\TimeScape Save Synonym List"
              componentClassID="Microsoft.ManagedComponentHost"
              description="TimeScape Value Destination"
              name="TimeScape Save Synonym List"
              usesDispositions="true">
              <properties>
                <property
                  dataType="System.String"
                  description="Code Type to use for all item codes. This is used when CodeTypeColumn = -1 as the code type is not provided in the column data."
                  expressionType="Notify"
                  name="CodeType">RMS_INDICATION_ID</property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the item code type to use."
                  expressionType="Notify"
                  name="CodeTypeColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">-1</property>
                <property
                  dataType="System.String"
                  description="Target property name to use for all values. This is used when PropertyNameColumn = -1 as the property name is not provided in the column data."
                  expressionType="Notify"
                  name="PropertyName">indication_synonym_ids_list</property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the target property name."
                  expressionType="Notify"
                  name="PropertyNameColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">-1</property>
                <property
                  dataType="System.String"
                  description="Target data source to use for all values. This is used when DataSourceColumn = -1 as the data source is not provided in the column data. If target property is single sourced this value must be left blank or set to 'Internal'."
                  expressionType="Notify"
                  name="DataSource"></property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the target data source."
                  expressionType="Notify"
                  name="DataSourceColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">-1</property>
                <property
                  dataType="System.Int32"
                  description="The data type of all values in the ValueColumn in the column data."
                  expressionType="Notify"
                  name="DataType"
                  typeConverter="Xenomorph.DbDataType, Xenomorph.Generic, Version=5.0.4000.0, Culture=neutral, PublicKeyToken=2adfa95c2785233e">8</property>
                <property
                  dataType="System.Int32"
                  description="The numer of data rows to cache before saving to the database."
                  expressionType="Notify"
                  name="CacheSize"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">10000</property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the item code to use."
                  expressionType="Notify"
                  name="CodeColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">0</property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the value to save."
                  expressionType="Notify"
                  name="ValueColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">1</property>
                <property
                  dataType="System.String"
                  description="Reference database to use for all values when the data type of the values to save is Reference. This is used when ReferenceDatabaseColumn = -1 as the database is not provided in the column data."
                  expressionType="Notify"
                  name="ReferenceDatabase"></property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the reference database to use when the data type of the values to save is Reference."
                  expressionType="Notify"
                  name="ReferenceDatabaseColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">-1</property>
                <property
                  dataType="System.String"
                  description="Reference code type to use for all values when the data type of the values to save is Reference. This is used when ReferenceCodeTypeColumn = -1 as the reference code type is not provided in the column data."
                  expressionType="Notify"
                  name="ReferenceCodeType"></property>
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the reference code type to use when the data type of the values to save is Reference."
                  expressionType="Notify"
                  name="ReferenceCodeTypeColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">-1</property>
                <property
                  dataType="System.Null"
                  description="The date of all values in the ValueColumn of the data columns when the target property is historic. This is used when SaveDateColumn = -1. Leave blank for static target properties."
                  expressionType="Notify"
                  name="SaveDate"
                  typeConverter="System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <property
                  dataType="System.Int32"
                  description="Zero based index of data column that contains the date of the value in the ValueColumn when the target property is historic."
                  expressionType="Notify"
                  name="SaveDateColumn"
                  typeConverter="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">-1</property>
                <property
                  dataType="System.String"
                  description="If property holds tick data, specifies the type of overwriting for existing series (default = All). All = append to existing series. Day = first remove all values in each overlapping day."
                  expressionType="Notify"
                  name="TickOverwriteType">All</property>
                <property
                  dataType="System.Boolean"
                  description="If True the process is audited, else it is not audited."
                  expressionType="Notify"
                  name="AuditProcess"
                  typeConverter="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">false</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Xenomorph.TimeScape.SSIS.ValueDestination, Xenomorph.TimeScape.SSIS, Version=5.0.4000.0, Culture=neutral, PublicKeyToken=2adfa95c2785233e</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Save Indication Data\TimeScape Save Synonym List.Connections[TimeScape Database Connector]"
                  connectionManagerID="{F1478C8A-4B9E-42EF-B758-9D8D8F6B6E35}:external"
                  connectionManagerRefId="Project.ConnectionManagers[Global Raw Database]"
                  description="The target database to save all item values to."
                  name="TimeScape Database Connector" />
              </connections>
              <inputs>
                <input
                  refId="Package\Save Indication Data\TimeScape Save Synonym List.Inputs[TimeScape Value Destination]"
                  errorOrTruncationOperation="Property value could not be saved."
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="TimeScape Value Destination">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Save Indication Data\TimeScape Save Synonym List.Inputs[TimeScape Value Destination].Columns[indication_id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="indication_id"
                      lineageId="Package\Save Indication Data\TimeScape Create Synonym List.Outputs[List Output].Columns[indication_id]" />
                    <inputColumn
                      refId="Package\Save Indication Data\TimeScape Save Synonym List.Inputs[TimeScape Value Destination].Columns[TimeScape List]"
                      cachedCodepage="1252"
                      cachedDataType="text"
                      cachedName="TimeScape List"
                      lineageId="Package\Save Indication Data\TimeScape Create Synonym List.Outputs[List Output].Columns[TimeScape List]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Save Indication Data\TimeScape Save Synonym List.Outputs[Value Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Value Destination Error Output"
                  synchronousInputId="Package\Save Indication Data\TimeScape Save Synonym List.Inputs[TimeScape Value Destination]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save Indication Data\TimeScape Save Synonym List.Outputs[Value Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Save Indication Data\TimeScape Save Synonym List.Outputs[Value Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Save Indication Data\TimeScape Save Synonym List.Outputs[Value Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Save Indication Data\TimeScape Save Synonym List.Outputs[Value Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Save Indication Data.Paths[Derived Column Output]"
              endId="Package\Save Indication Data\Multicast.Inputs[Multicast Input 1]"
              name="Derived Column Output"
              startId="Package\Save Indication Data\DC - Edit Columns.Outputs[Derived Column Output]" />
            <path
              refId="Package\Save Indication Data.Paths[Flat File Source Output]"
              endId="Package\Save Indication Data\DC - Edit Columns.Inputs[Derived Column Input]"
              name="Flat File Source Output"
              startId="Package\Save Indication Data\Read Indications File.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Save Indication Data.Paths[List Output]"
              endId="Package\Save Indication Data\TimeScape Save Product List.Inputs[TimeScape Value Destination]"
              name="List Output"
              startId="Package\Save Indication Data\TimeScape Create Product List.Outputs[List Output]" />
            <path
              refId="Package\Save Indication Data.Paths[List Output1]"
              endId="Package\Save Indication Data\TimeScape Save Synonym List.Inputs[TimeScape Value Destination]"
              name="List Output"
              startId="Package\Save Indication Data\TimeScape Create Synonym List.Outputs[List Output]" />
            <path
              refId="Package\Save Indication Data.Paths[Multicast Output 1]"
              endId="Package\Save Indication Data\SC - Product IDs.Inputs[Input 0]"
              name="Multicast Output 1"
              startId="Package\Save Indication Data\Multicast.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Save Indication Data.Paths[Multicast Output 2]"
              endId="Package\Save Indication Data\SC - Synonym IDs.Inputs[Input 0]"
              name="Multicast Output 2"
              startId="Package\Save Indication Data\Multicast.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Save Indication Data.Paths[Multicast Output 3]"
              endId="Package\Save Indication Data\TimeScape Save Indication Data.Inputs[TimeScape Values Destination]"
              name="Multicast Output 3"
              startId="Package\Save Indication Data\Multicast.Outputs[Multicast Output 3]" />
            <path
              refId="Package\Save Indication Data.Paths[Output 0]"
              endId="Package\Save Indication Data\Sort Product.Inputs[Sort Input]"
              name="Output 0"
              startId="Package\Save Indication Data\SC - Product IDs.Outputs[Output 0]" />
            <path
              refId="Package\Save Indication Data.Paths[Output 01]"
              endId="Package\Save Indication Data\Sort Synonym.Inputs[Sort Input]"
              name="Output 0"
              startId="Package\Save Indication Data\SC - Synonym IDs.Outputs[Output 0]" />
            <path
              refId="Package\Save Indication Data.Paths[Sort Output]"
              endId="Package\Save Indication Data\TimeScape Create Product List.Inputs[Input]"
              name="Sort Output"
              startId="Package\Save Indication Data\Sort Product.Outputs[Sort Output]" />
            <path
              refId="Package\Save Indication Data.Paths[Sort Output1]"
              endId="Package\Save Indication Data\TimeScape Create Synonym List.Inputs[Input]"
              name="Sort Output"
              startId="Package\Save Indication Data\Sort Synonym.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{AF4F3A17-12EC-412A-8644-D19D6140BA49}"
      DTS:From="Package\Create Indications"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Save Indication Data" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="199,42"
          Id="Package\Create Indications"
          TopLeft="10.5,4.5" />
        <NodeLayout
          Size="200,42"
          Id="Package\Save Indication Data"
          TopLeft="5.50000000000001,106.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="107.75,46.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Create Indications">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Create Indications\Multicast"
          TopLeft="64.5,209.5" />
        <NodeLayout
          Size="268,41.6"
          Id="Package\Create Indications\TimeScape Create Indication Raw"
          TopLeft="5.50000000000003,311.5" />
        <NodeLayout
          Size="203.2,41.6"
          Id="Package\Create Indications\DC - Edit Columns"
          TopLeft="42,107.5" />
        <NodeLayout
          Size="211.2,41.6"
          Id="Package\Create Indications\Read Indications File"
          TopLeft="36,5.5" />
        <EdgeLayout
          Id="Package\Create Indications.Paths[Multicast Output 4]"
          TopLeft="143.25,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create Indications.Paths[Flat File Source Output]"
          TopLeft="142.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create Indications.Paths[Derived Column Output]"
          TopLeft="145.25,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Save Indication Data">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="215,42"
          Id="Package\Save Indication Data\TimeScape Save Product List"
          TopLeft="492.5,617.5" />
        <NodeLayout
          Size="145,42"
          Id="Package\Save Indication Data\Sort Synonym"
          TopLeft="306.5,413.5" />
        <NodeLayout
          Size="230,42"
          Id="Package\Save Indication Data\TimeScape Create Synonym List"
          TopLeft="198,515.5" />
        <NodeLayout
          Size="222,42"
          Id="Package\Save Indication Data\TimeScape Save Synonym List"
          TopLeft="202,617.5" />
        <NodeLayout
          Size="177,42"
          Id="Package\Save Indication Data\Read Indications File"
          TopLeft="290.5,5.5" />
        <NodeLayout
          Size="137,42"
          Id="Package\Save Indication Data\Sort Product"
          TopLeft="531.5,413.5" />
        <NodeLayout
          Size="157,42"
          Id="Package\Save Indication Data\SC - Product IDs"
          TopLeft="521.5,311.5" />
        <NodeLayout
          Size="157,42"
          Id="Package\Save Indication Data\Multicast"
          TopLeft="300.5,209.5" />
        <NodeLayout
          Size="223,42"
          Id="Package\Save Indication Data\TimeScape Create Product List"
          TopLeft="488.5,515.5" />
        <NodeLayout
          Size="231,42"
          Id="Package\Save Indication Data\TimeScape Save Indication Data"
          TopLeft="5.5,311.5" />
        <NodeLayout
          Size="165,42"
          Id="Package\Save Indication Data\DC - Edit Columns"
          TopLeft="298.5,109.5" />
        <NodeLayout
          Size="164,42"
          Id="Package\Save Indication Data\SC - Synonym IDs"
          TopLeft="297,311.5" />
        <EdgeLayout
          Id="Package\Save Indication Data.Paths[Sort Output1]"
          TopLeft="379,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-65.9999999999999,60"
              Start="0,0"
              End="-65.9999999999999,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-61.9999999999999,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-61.9999999999999,30"
                    Point2="-65.9999999999999,30"
                    Point3="-65.9999999999999,34" />
                  <mssgle:LineSegment
                    End="-65.9999999999999,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Save Indication Data.Paths[Sort Output]"
          TopLeft="600,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Save Indication Data.Paths[Output 01]"
          TopLeft="379,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Save Indication Data.Paths[Output 0]"
          TopLeft="600,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Save Indication Data.Paths[Multicast Output 3]"
          TopLeft="341.75,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-220.75,60.0000000000001"
              Start="0,0"
              End="-220.75,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.6680584551149" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.6680584551149"
                    Point2="0,20.6680584551149"
                    Point3="-4,20.6680584551149" />
                  <mssgle:LineSegment
                    End="-216.75,20.6680584551149" />
                  <mssgle:CubicBezierSegment
                    Point1="-216.75,20.6680584551149"
                    Point2="-220.75,20.6680584551149"
                    Point3="-220.75,24.6680584551149" />
                  <mssgle:LineSegment
                    End="-220.75,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Save Indication Data.Paths[Multicast Output 2]"
          TopLeft="379,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Save Indication Data.Paths[Multicast Output 1]"
          TopLeft="416.25,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="183.75,60"
              Start="0,0"
              End="183.75,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.6680584551148" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.6680584551148"
                    Point2="0,20.6680584551148"
                    Point3="4,20.6680584551148" />
                  <mssgle:LineSegment
                    End="179.75,20.6680584551148" />
                  <mssgle:CubicBezierSegment
                    Point1="179.75,20.6680584551148"
                    Point2="183.75,20.6680584551148"
                    Point3="183.75,24.6680584551148" />
                  <mssgle:LineSegment
                    End="183.75,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Save Indication Data.Paths[List Output1]"
          TopLeft="313,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.95138671875,20.533203125,49.9027734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Save Indication Data.Paths[List Output]"
          TopLeft="600,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.95138671875,20.533203125,49.9027734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Save Indication Data.Paths[Flat File Source Output]"
          TopLeft="380,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62"
              Start="0,0"
              End="0,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Save Indication Data.Paths[Derived Column Output]"
          TopLeft="380,151.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58"
              Start="0,0"
              End="0,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>